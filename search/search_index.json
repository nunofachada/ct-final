{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Commit Tracker","text":"<p>Commit Tracker is a powerful tool designed to analyze Git repositories, offering comprehensive statistics on commit activities, contributors, and much more. This tool makes it easier to get an overview of development progress and to delve into the details of commit history.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Detailed Commit Analysis: Explore commit logs for insights and statistics.</li> <li>Contributor Statistics: See the distribution of contributions across team members.</li> <li>Plugin Integration: Enhance functionalities with plugins for additional metrics.</li> <li>Intuitive Web Interface: Navigate your Git statistics via a user-friendly dashboard built with Dash.</li> </ul>"},{"location":"#why-use-commit-tracker","title":"Why Use Commit Tracker?","text":"<p>Commit Tracker equips project managers, developers, and analysts with the insights needed to deeply understand development trends and contributions. It's the perfect tool for streamlining the development process, identifying bottlenecks, or simply getting a snapshot of your project's health.</p>"},{"location":"#installation","title":"Installation","text":"<p>To install Commit Tracker, simply run: <code>pip install commit-tracker</code></p> <p>This command fetches the latest version of Commit Tracker from PyPI and installs it on your system.</p>"},{"location":"#launching-commit-tracker","title":"Launching Commit Tracker","text":"<p>After installation, you can launch Commit Tracker's Dash application to start analyzing Git repositories:</p> <p>To start, run: <code>python -m committracker</code></p> <p>This command starts a local web server. Open your web browser and navigate to http://127.0.0.1:8050/ to access the Commit Tracker dashboard.</p> <p>For more detailed information on development and contributing to Commit Tracker, please refer to the developers documentation in the <code>dev.md</code> file.</p>"},{"location":"contributors/","title":"Contributors Guide","text":"<p>Thank you for your interest in contributing to Commit Tracker! We value the contributions from our community, whether they're bug fixes, new features, or documentation improvements.</p>"},{"location":"contributors/#how-to-contribute","title":"How to Contribute","text":"<ol> <li> <p>Fork the Repository: Start by forking the <code>ct-final</code> repository on GitHub to your personal account.</p> </li> <li> <p>Clone Your Fork: Clone your forked repository to your local machine to start making changes.</p> </li> <li> <p>Set Up Your Development Environment: Follow the instructions in <code>dev.md</code> to set up your local development environment.</p> </li> <li> <p>Create a New Branch: For each new contribution, create a new branch from <code>main</code> with a descriptive name related to the contribution you're making.</p> </li> <li> <p>Make Your Changes: Implement your changes, adhering to the coding standards and guidelines described in <code>CONTRIBUTING.md</code>.</p> </li> <li> <p>Write Tests: If you're adding new functionality, write tests that cover your changes. Ensure all tests pass by running <code>pytest</code>.</p> </li> <li> <p>Document Your Changes: Update or add documentation as necessary, following the project's documentation standards.</p> </li> <li> <p>Submit a Pull Request: Push your changes to your fork on GitHub and submit a pull request to the <code>ct-final</code> repository. Provide a clear description of the changes and any related issue numbers.</p> </li> </ol>"},{"location":"contributors/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"contributors/#questions-or-suggestions","title":"Questions or Suggestions","text":"<p>If you have questions or suggestions, feel free to open an issue on GitHub or reach out to the project maintainers directly.</p>"},{"location":"dev/","title":"For Developers","text":"<p>If you are interested in contributing to the Commit Tracker project or wish to add new features, please follow the steps below to set up your development environment.</p>"},{"location":"dev/#installing-for-development","title":"Installing for Development","text":"<p>To set up your development environment for Commit Tracker, execute the following commands. This will install all necessary development dependencies, including new tools and libraries introduced for handling data visualization and Git repository analysis.</p> <p>git clone https://github.com/andrecosta99/ct-final.git cd ct-final python -m venv env</p>"},{"location":"dev/#on-unix-or-macos","title":"On Unix or MacOS","text":"<p>source env/bin/activate</p>"},{"location":"dev/#on-windows","title":"On Windows","text":"<p>.\\env\\Scripts\\activate pip install -e . pre-commit install</p> <p>Ensure all dependencies are up to date by reviewing the <code>requirements.txt</code> file or any other dependency management file used by the project.</p>"},{"location":"dev/#running-tests","title":"Running Tests","text":"<p>Commit Tracker includes a suite of tests to ensure the quality and functionality of the code. To run these tests, use the following command:</p> <p>pytest</p> <p>To generate a coverage report and see which parts of your code are covered by tests, use:</p> <p>pytest --cov=committracker --cov-report=html</p> <p>This will create a coverage report in the <code>htmlcov</code> directory, which you can open with a web browser.</p>"},{"location":"dev/#contributing-guidelines","title":"Contributing Guidelines","text":"<p>Please review the <code>CONTRIBUTING.md</code> file for detailed instructions on how to contribute to the project, including coding standards, pull request processes, and guidelines for writing tests and documentation.</p> <p>For documentation changes or additions, ensure you are familiar with MkDocs and follow the project's standards for documentation structure and formatting.</p>"},{"location":"functions/","title":"Available Plugins Functions and Documentation","text":"<p>Commit Tracker provides a set of functionalities to analyze Git repositories, offering insights through statistics and visualizations. This document details the available functions and their usage.</p>"},{"location":"functions/#extract_contributors","title":"extract_contributors","text":"<p>Extracts contributor data from a repository, showing the number of commits made by each contributor.</p>"},{"location":"functions/#parameters","title":"Parameters","text":"<ul> <li><code>repo_path</code>: String. The path to the local Git repository.</li> </ul>"},{"location":"functions/#returns","title":"Returns","text":"<ul> <li><code>Counter</code>: A counter object where keys are author names and values are the number of commits made by each author.</li> </ul>"},{"location":"functions/#usage","title":"Usage","text":"<p>from committracker.plugins.contributors import extract_contributors contributors = extract_contributors(\"/path/to/repo\")</p>"},{"location":"functions/#display_contributors","title":"display_contributors","text":"<p>Displays contributor data in a Dash component.</p>"},{"location":"functions/#parameters_1","title":"Parameters","text":"<ul> <li><code>repo_path</code>: String. The path to the local Git repository.</li> </ul>"},{"location":"functions/#returns_1","title":"Returns","text":"<ul> <li>Dash component containing the list of contributors and their commit counts.</li> </ul>"},{"location":"functions/#usage_1","title":"Usage","text":"<p>from committracker.plugins.contributors import display_contributors component = display_contributors(\"/path/to/repo\")</p>"},{"location":"functions/#extract_git_stats","title":"extract_git_stats","text":"<p>Extracts various statistics from a local Git repository, such as total commits, commit dates, and average lines changed per commit.</p>"},{"location":"functions/#parameters_2","title":"Parameters","text":"<ul> <li><code>repo_path</code>: String. The path to the local Git repository.</li> </ul>"},{"location":"functions/#returns_2","title":"Returns","text":"<ul> <li><code>Dictionary</code>: A dictionary containing various statistics about the repository.</li> </ul>"},{"location":"functions/#usage_2","title":"Usage","text":"<p>from committracker.plugins.git_statistics import extract_git_stats stats = extract_git_stats(\"/path/to/repo\")</p>"},{"location":"functions/#display_git_statistics","title":"display_git_statistics","text":"<p>Displays Git statistics in a Dash component.</p>"},{"location":"functions/#parameters_3","title":"Parameters","text":"<ul> <li><code>repo_path</code>: String. The path to the local Git repository.</li> </ul>"},{"location":"functions/#returns_3","title":"Returns","text":"<ul> <li>Dash component containing the Git statistics visualization.</li> </ul>"},{"location":"functions/#usage_3","title":"Usage","text":"<p>from committracker.plugins.git_statistics import display_git_statistics component = display_git_statistics(\"/path/to/repo\")</p>"},{"location":"functions/#extract_commit_types","title":"extract_commit_types","text":"<p>Extracts and categorizes commit types based on commit messages from a local Git repository.</p>"},{"location":"functions/#parameters_4","title":"Parameters","text":"<ul> <li><code>repo_path</code>: String. The path to the local Git repository.</li> </ul>"},{"location":"functions/#returns_4","title":"Returns","text":"<ul> <li><code>Counter</code>: A Counter object mapping commit types (e.g., Bug Fix, Feature) to their frequencies.</li> </ul>"},{"location":"functions/#usage_4","title":"Usage","text":"<p>from committracker.plugins.commit_type import extract_commit_types commit_types = extract_commit_types(\"/path/to/repo\")</p>"},{"location":"functions/#display_commit_type","title":"display_commit_type","text":"<p>Creates a Dash HTML component to display the distribution of commit types in a repository.</p>"},{"location":"functions/#parameters_5","title":"Parameters","text":"<ul> <li><code>repo_path</code>: String. The path to the local Git repository.</li> </ul>"},{"location":"functions/#returns_5","title":"Returns","text":"<ul> <li>Dash HTML component containing the list of commit types and their counts.</li> </ul>"},{"location":"functions/#usage_5","title":"Usage","text":"<p>from committracker.plugins.commit_type import display_commit_type component = display_commit_type(\"/path/to/repo\")</p>"},{"location":"functions/#display_commit_graph","title":"display_commit_graph","text":"<p>Generates and displays a graph of commits over time.</p>"},{"location":"functions/#parameters_6","title":"Parameters","text":"<ul> <li><code>repo_path</code>: String. The path to the local Git repository.</li> </ul>"},{"location":"functions/#returns_6","title":"Returns","text":"<ul> <li>Dash component containing the commit graph.</li> </ul>"},{"location":"functions/#usage_6","title":"Usage","text":"<p>from committracker.plugins.commit_graph import display_commit_graph component = display_commit_graph(\"/path/to/repo\")</p>"}]}